Starting read from Train file...
(739, 121)
train.shape = (739, 120)
train_labels.shape = (739, 1)
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.105084745763
[[ 0 10  6 ...,  5  7  5]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.623728813559
[[10  0  0 ...,  0  0  0]
 [ 0  6  0 ...,  0  0  0]
 [ 0  0  7 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  5  0  0]
 [ 0  0  0 ...,  0  7  0]
 [ 0  0  0 ...,  0  0  0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.359322033898
[[4 0 0 ..., 0 0 0]
 [0 2 3 ..., 0 0 0]
 [0 0 3 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 3 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 3]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.569491525424
[[5 0 0 ..., 0 0 0]
 [0 5 2 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 3]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.441276168849

0.427118644068
[[5 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 3 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 3]]

### RandomForestClassifier ###
score.mean():  0.501640743661

0.545762711864
[[8 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 3 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 3]]

### ExtraTreesClassifier ###
score.mean():  0.553555757188

0.586440677966
[[5 0 0 ..., 0 0 0]
 [0 6 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 2 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 4]]

###  BaggingClassifier ###
score.mean():  0.80402513135

0.820338983051
[[10  0  0 ...,  0  0  0]
 [ 0  6  0 ...,  0  0  0]
 [ 0  0  6 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  5  0  0]
 [ 0  0  0 ...,  0  7  0]
 [ 0  0  0 ...,  0  0  4]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.115254237288
[[ 0  5 13 ...,  0 11  9]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.420338983051
[[ 5  0  0 ...,  0  0  0]
 [ 0 13  0 ...,  0  0  0]
 [ 0  0  4 ..., 10 11  9]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.413559322034
[[ 3  0  0 ...,  0  0  0]
 [ 1  3  0 ...,  0  0  0]
 [ 0  8  4 ...,  1  0  4]
 ..., 
 [ 0  0  0 ...,  6  0  0]
 [ 0  0  0 ...,  0 11  0]
 [ 0  0  0 ...,  0  0  0]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.525423728814
[[ 3  0  0 ...,  0  0  0]
 [ 0  4  0 ...,  0  0  0]
 [ 2  8  4 ...,  0  0  1]
 ..., 
 [ 0  0  0 ...,  6  0  0]
 [ 0  0  0 ...,  0 11  0]
 [ 0  0  0 ...,  0  0  5]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.438080431177

0.501694915254
[[2 1 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 2 ..., 1 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 0]
 [0 0 0 ..., 0 2 5]]

### RandomForestClassifier ###
score.mean():  0.531225124378

0.677966101695
[[ 5  3  0 ...,  0  0  0]
 [ 0  9  0 ...,  0  0  0]
 [ 0  0  3 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  7  0  0]
 [ 0  0  0 ...,  0 11  0]
 [ 0  0  0 ...,  0  0  4]]

### ExtraTreesClassifier ###
score.mean():  0.565443615257

0.640677966102
[[ 4  2  0 ...,  0  0  0]
 [ 0 10  0 ...,  0  0  0]
 [ 0  0  3 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  7  0  0]
 [ 0  0  0 ...,  0 11  1]
 [ 0  0  0 ...,  0  0  6]]

###  BaggingClassifier ###
score.mean():  0.784274461028

0.871186440678
[[ 5  0  0 ...,  0  0  0]
 [ 0 10  0 ...,  0  0  0]
 [ 0  0  4 ...,  0  0  0]
 ..., 
 [ 0  0  0 ..., 10  0  0]
 [ 0  0  0 ...,  0 11  0]
 [ 0  0  0 ...,  0  0  8]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.0847457627119
[[0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.108474576271
[[0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.274576271186
[[0 0 0 ..., 0 0 0]
 [0 4 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 4 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 0]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.528813559322
[[3 0 0 ..., 0 0 1]
 [1 5 3 ..., 0 0 0]
 [0 0 4 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 4]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.477560385271

0.461016949153
[[1 0 0 ..., 0 0 1]
 [0 3 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 4 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 3]]

### RandomForestClassifier ###
score.mean():  0.510910933021

0.572881355932
[[4 0 0 ..., 0 0 1]
 [0 3 0 ..., 0 0 0]
 [0 0 7 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 4 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 4]]

### ExtraTreesClassifier ###
score.mean():  0.529489229582

0.630508474576
[[3 0 0 ..., 0 0 1]
 [0 3 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 3]]

###  BaggingClassifier ###
score.mean():  0.788519435699

0.847457627119
[[5 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [0 0 0 ..., 0 9 0]
 [0 0 0 ..., 0 0 6]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.142372881356
[[ 0  7  6 ...,  7 10 10]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.603389830508
[[ 7  0  0 ...,  0  0  0]
 [ 0  6  0 ...,  0  0  0]
 [ 0  0  6 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  7  0  0]
 [ 0  0  0 ...,  0 10  1]
 [ 0  0  0 ...,  0  0  0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.416949152542
[[ 2  0  0 ...,  0  0  0]
 [ 1  3  1 ...,  0  0  0]
 [ 0  0  3 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  6  0  0]
 [ 0  0  0 ...,  0 10  1]
 [ 0  0  0 ...,  0  0  3]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.545762711864
[[ 3  0  0 ...,  0  0  0]
 [ 1  4  0 ...,  0  0  0]
 [ 0  0  5 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  6  0  0]
 [ 0  0  0 ...,  0 10  1]
 [ 0  0  0 ...,  0  0  3]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.405604043786

0.508474576271
[[2 0 0 ..., 0 0 0]
 [0 2 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 1 5]]

### RandomForestClassifier ###
score.mean():  0.480026834582

0.579661016949
[[ 3  0  0 ...,  0  0  1]
 [ 1  4  0 ...,  0  0  0]
 [ 0  0  5 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  6  0  0]
 [ 0  0  0 ...,  0 10  1]
 [ 0  0  0 ...,  0  0  4]]

### ExtraTreesClassifier ###
score.mean():  0.536386099155

0.647457627119
[[ 4  0  0 ...,  0  0  0]
 [ 1  4  0 ...,  0  0  0]
 [ 0  0  5 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  7  0  0]
 [ 0  0  0 ...,  0 10  1]
 [ 0  0  0 ...,  0  0  3]]

###  BaggingClassifier ###
score.mean():  0.736825150114

0.871186440678
[[ 7  0  0 ...,  0  0  0]
 [ 0  6  0 ...,  0  0  0]
 [ 0  0  5 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  7  0  0]
 [ 0  0  0 ...,  0 10  1]
 [ 0  0  0 ...,  0  0  7]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.125423728814
[[ 0  9  7 ..., 10  9  8]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.284745762712
[[9 0 0 ..., 0 0 0]
 [0 4 0 ..., 0 0 0]
 [0 0 2 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.271186440678
[[1 0 0 ..., 0 0 0]
 [0 2 2 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 2]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.481355932203
[[5 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 1 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 2]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.430995512291

0.481355932203
[[2 0 0 ..., 0 0 1]
 [0 3 0 ..., 0 0 0]
 [0 0 8 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 8 1]
 [1 0 0 ..., 0 0 4]]

### RandomForestClassifier ###
score.mean():  0.52381445513

0.603389830508
[[6 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 4 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 4]]

### ExtraTreesClassifier ###
score.mean():  0.560411676104

0.640677966102
[[5 0 0 ..., 0 0 0]
 [0 7 0 ..., 0 0 0]
 [0 0 3 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 6]]

###  BaggingClassifier ###
score.mean():  0.798032651072

0.884745762712
[[ 8  0  0 ...,  0  0  0]
 [ 0  6  0 ...,  0  0  0]
 [ 0  1  9 ...,  0  0  0]
 ..., 
 [ 0  0  0 ..., 10  0  0]
 [ 0  0  0 ...,  0  9  1]
 [ 0  0  0 ...,  0  0  6]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.115254237288
[[ 0 11  6 ...,  7  7  1]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  2]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.691525423729
[[9 0 0 ..., 0 0 0]
 [0 6 0 ..., 0 0 0]
 [0 0 8 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [0 0 0 ..., 0 7 1]
 [1 0 0 ..., 0 0 2]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.393220338983
[[3 0 0 ..., 0 0 0]
 [2 5 3 ..., 0 0 0]
 [0 0 2 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 7 1]
 [2 0 0 ..., 0 0 2]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.559322033898
[[6 0 0 ..., 0 0 0]
 [1 4 0 ..., 0 0 0]
 [0 0 8 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [1 0 0 ..., 0 7 1]
 [1 0 0 ..., 0 0 2]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.436806528985

0.481355932203
[[4 0 0 ..., 0 0 0]
 [1 4 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 3 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 2]]

### RandomForestClassifier ###
score.mean():  0.517751196669

0.562711864407
[[5 0 0 ..., 0 0 0]
 [2 3 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 2]]

### ExtraTreesClassifier ###
score.mean():  0.586044398758

0.633898305085
[[5 0 0 ..., 0 0 0]
 [2 4 0 ..., 0 0 0]
 [0 0 7 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 4 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 2]]

###  BaggingClassifier ###
score.mean():  0.759154907641

0.881355932203
[[9 0 0 ..., 0 0 0]
 [0 6 0 ..., 0 0 0]
 [0 0 7 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 2]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.142372881356
[[ 0  9 10 ...,  8  9  7]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.508474576271
[[9 0 0 ..., 0 0 0]
 [0 9 0 ..., 0 0 0]
 [0 0 4 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 8 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.406779661017
[[2 1 0 ..., 0 0 0]
 [1 8 0 ..., 0 0 0]
 [0 0 2 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 3 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 1]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.549152542373
[[3 0 0 ..., 0 0 0]
 [0 8 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 5]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.39833856272

0.505084745763
[[3 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [2 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 4]]

### RandomForestClassifier ###
score.mean():  0.519149531429

0.586440677966
[[ 5  0  0 ...,  0  0  0]
 [ 0 10  0 ...,  0  0  0]
 [ 0  0  4 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  5  0  0]
 [ 0  0  0 ...,  0  9  1]
 [ 0  0  0 ...,  0  0  2]]

### ExtraTreesClassifier ###
score.mean():  0.5570153526

0.661016949153
[[5 1 0 ..., 0 0 0]
 [0 8 0 ..., 0 0 0]
 [0 0 4 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 9 1]
 [0 0 0 ..., 0 0 2]]

###  BaggingClassifier ###
score.mean():  0.736174063195

0.877966101695
[[9 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 4 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [0 0 0 ..., 0 6 1]
 [0 0 0 ..., 0 0 6]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.11186440678
[[0 4 8 ..., 7 7 5]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.633898305085
[[4 0 0 ..., 0 0 0]
 [0 7 0 ..., 0 0 0]
 [0 0 8 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.366101694915
[[3 0 0 ..., 0 0 0]
 [0 2 0 ..., 0 0 0]
 [0 0 1 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [1 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 4]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.569491525424
[[3 0 0 ..., 0 0 0]
 [0 5 0 ..., 0 0 0]
 [0 0 7 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [1 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 5]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.411706556102

0.481355932203
[[2 0 0 ..., 1 0 0]
 [0 4 0 ..., 0 0 0]
 [0 0 8 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 4 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 2]]

### RandomForestClassifier ###
score.mean():  0.529151770197

0.579661016949
[[3 0 0 ..., 0 0 0]
 [0 9 0 ..., 0 0 0]
 [0 0 7 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 1]]

### ExtraTreesClassifier ###
score.mean():  0.560841629839

0.610169491525
[[2 0 0 ..., 0 0 0]
 [0 9 0 ..., 0 0 0]
 [0 0 6 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 3]]

###  BaggingClassifier ###
score.mean():  0.743381933065

0.827118644068
[[4 0 0 ..., 0 0 0]
 [0 6 0 ..., 0 0 0]
 [0 0 7 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 0 4]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.0915254237288
[[0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.115254237288
[[0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.335593220339
[[0 0 0 ..., 0 0 0]
 [1 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 2 0 0]
 [0 0 0 ..., 0 8 1]
 [0 0 0 ..., 0 0 2]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.545762711864
[[3 0 0 ..., 0 0 0]
 [1 3 0 ..., 0 0 0]
 [0 0 3 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 6 0 0]
 [0 0 0 ..., 0 8 1]
 [0 0 0 ..., 0 0 4]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.414158898804

0.454237288136
[[1 0 0 ..., 0 0 1]
 [1 4 0 ..., 0 0 0]
 [0 0 2 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 4 0 0]
 [0 0 0 ..., 0 5 1]
 [0 0 0 ..., 0 1 4]]

### RandomForestClassifier ###
score.mean():  0.541311434095

0.6
[[3 0 0 ..., 0 0 1]
 [1 6 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 7 1]
 [0 0 0 ..., 0 1 3]]

### ExtraTreesClassifier ###
score.mean():  0.564708701001

0.576271186441
[[2 2 0 ..., 0 0 1]
 [1 5 0 ..., 0 0 0]
 [0 0 4 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 5 0 0]
 [0 0 0 ..., 0 8 1]
 [0 0 0 ..., 0 0 3]]

###  BaggingClassifier ###
score.mean():  0.739939913053

0.867796610169
[[9 0 0 ..., 0 0 1]
 [0 6 0 ..., 0 0 0]
 [0 0 5 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 7 0 0]
 [0 0 0 ..., 0 6 0]
 [0 0 0 ..., 0 0 6]]
######################################################
(444, 120) (295, 120)

******************************************************
Combinacoes:
### lda + svm ### 

----------------
LDA:

----------------
SVM:
combe: 

0.132203389831
[[ 0 10  9 ...,  7 10  7]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]
 [ 0  0  0 ...,  0  0  0]]
### knn + lda + svm ### 

----------------
KNN:

----------------
LDA:

----------------
SVM:
combe: 

0.210169491525
[[8 0 0 ..., 0 0 0]
 [0 3 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]
 [0 0 0 ..., 0 0 0]]
------------------------------
### log_mul + svm + bayes ### 

----------------
Logistic Regression - mul:

----------------
SVM:

----------------
Gaussian Naive Bayes:
combe: 

0.376271186441
[[ 5  0  0 ...,  0  0  0]
 [ 0  2  1 ...,  0  0  0]
 [ 0  0  3 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  3  0  0]
 [ 0  0  0 ...,  0 10  0]
 [ 0  0  0 ...,  0  0  2]]
------------------------------
### all ### 

----------------
Decision Tree:

----------------
Gaussian Naive Bayes:

----------------
KNN:

----------------
SVM:

----------------
Perceptron:

----------------
LDA:

----------------
Logistic Regression - ovr:

----------------
Logistic Regression - mul:
combe: 

0.559322033898
[[ 5  0  0 ...,  0  0  1]
 [ 0  5  0 ...,  0  0  0]
 [ 0  1  9 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  4  0  0]
 [ 0  0  0 ...,  0 10  0]
 [ 0  0  0 ...,  0  0  6]]

******************************************************
Ensembles:

### DecisionTreeClassifier ###
score.mean():  0.399530114769

0.525423728814
[[3 0 0 ..., 0 0 0]
 [1 6 0 ..., 0 0 0]
 [0 0 8 ..., 0 0 0]
 ..., 
 [0 0 0 ..., 2 0 0]
 [0 0 0 ..., 0 9 0]
 [0 0 0 ..., 0 0 2]]

### RandomForestClassifier ###
score.mean():  0.490162917865

0.647457627119
[[ 6  0  0 ...,  0  0  0]
 [ 0  4  0 ...,  0  0  0]
 [ 0  0  8 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  5  0  0]
 [ 0  0  0 ...,  0 10  0]
 [ 0  0  0 ...,  0  0  6]]

### ExtraTreesClassifier ###
score.mean():  0.537652165551

0.68813559322
[[ 4  0  0 ...,  0  0  0]
 [ 0  6  0 ...,  0  0  0]
 [ 0  0  8 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  5  0  0]
 [ 0  0  0 ...,  0 10  0]
 [ 0  0  0 ...,  0  0  6]]

###  BaggingClassifier ###
score.mean():  0.75352331022

0.894915254237
[[ 9  0  0 ...,  0  0  0]
 [ 0  8  0 ...,  0  0  0]
 [ 0  0  8 ...,  0  0  0]
 ..., 
 [ 0  0  0 ...,  7  0  0]
 [ 0  0  0 ...,  0 10  0]
 [ 0  0  0 ...,  0  0  7]]
######################################################
######################################################
comb 0 :
[ 0.10508475  0.11525424  0.08474576  0.14237288  0.12542373  0.11525424
  0.14237288  0.11186441  0.09152542  0.13220339]
0.116610169492
comb 1 :
[ 0.62372881  0.42033898  0.10847458  0.60338983  0.28474576  0.69152542
  0.50847458  0.63389831  0.11525424  0.21016949]
0.42
comb 2 :
[ 0.35932203  0.41355932  0.27457627  0.41694915  0.27118644  0.39322034
  0.40677966  0.36610169  0.33559322  0.37627119]
0.361355932203
comb 3 :
[ 0.56949153  0.52542373  0.52881356  0.54576271  0.48135593  0.55932203
  0.54915254  0.56949153  0.54576271  0.55932203]
0.543389830508
comb 4 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
comb 5 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
comb 6 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
comb 7 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
comb 8 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
comb 9 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
ens 0 :
[ 0.42711864  0.50169492  0.46101695  0.50847458  0.48135593  0.48135593
  0.50508475  0.48135593  0.45423729  0.52542373]
0.482711864407
ens 1 :
[ 0.54576271  0.6779661   0.57288136  0.57966102  0.60338983  0.56271186
  0.58644068  0.57966102  0.6         0.64745763]
0.595593220339
ens 2 :
[ 0.58644068  0.64067797  0.63050847  0.64745763  0.64067797  0.63389831
  0.66101695  0.61016949  0.57627119  0.68813559]
0.631525423729
ens 3 :
[ 0.82033898  0.87118644  0.84745763  0.87118644  0.88474576  0.88135593
  0.8779661   0.82711864  0.86779661  0.89491525]
0.864406779661
ens 4 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
ens 5 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
ens 6 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
ens 7 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
ens 8 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
ens 9 :
[ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0.]
0.0
